### 无重复字符的最长子串
给定一个字符串 s ，请你找出其中不含有重复字符的 最长 
子串
 的长度。

 

示例 1:

输入: s = "abcabcbb"
输出: 3 
解释: 因为无重复字符的最长子串是 "abc"，所以其长度为 3。
示例 2:

输入: s = "bbbbb"
输出: 1
解释: 因为无重复字符的最长子串是 "b"，所以其长度为 1。
示例 3:

输入: s = "pwwkew"
输出: 3
解释: 因为无重复字符的最长子串是 "wke"，所以其长度为 3。
     请注意，你的答案必须是 子串 的长度，"pwke" 是一个子序列，不是子串。
 

提示：

0 <= s.length <= 5 * 104
s 由英文字母、数字、符号和空格组成

### 解答
用滑动窗口
class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        unordered_set<char> occ;
        int n = s.size();
        int ans = 0;
        int l = 0, r = 0;
        for (l = 0; l < n; l++){
            if (l != 0) {
                occ.erase(s[l - 1]);
            }
            while (r < n && !occ.count(s[r])){
                occ.insert(s[r]);
                r++;    
                
            }
            //这里不是r - l + 1,因为不管r是到了右边界还是，s[r]是重复字符跳出循环，s[r]都不需要包含进子串内
            ans = max(ans, r - l);
            
        }
        return ans;
    }
};
