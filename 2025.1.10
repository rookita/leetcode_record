### 回文数
给你一个整数 x ，如果 x 是一个回文整数，返回 true ；否则，返回 false 。

回文数
是指正序（从左向右）和倒序（从右向左）读都是一样的整数。

例如，121 是回文，而 123 不是。
 

示例 1：

输入：x = 121
输出：true
示例 2：

输入：x = -121
输出：false
解释：从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。
示例 3：

输入：x = 10
输出：false
解释：从右向左读, 为 01 。因此它不是一个回文数。
 

提示：

-231 <= x <= 231 - 1
 

进阶：你能不将整数转为字符串来解决这个问题吗？

### 解法
太惭愧了，之前教了那么久的C++，讲过好多次如何翻转一个数字，结果自己来写还是会出错。
//将左边数字翻转，看是不是和右边数字一致
#include <math.h>
class Solution {
public:
    bool isPalindrome(int x) {
        if (x < 0) return false;
        long long reverse = 0;
        int xx = x;
        while (x != 0){
            reverse = reverse * 10 + x % 10;
            x = x / 10; 
        }
        if (reverse == xx) return true;
        return false;
    }
};
